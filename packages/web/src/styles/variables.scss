@use 'sass:color';

$shades: (
  //   '0': 0%,
  '10': 10%,
  '20': 20%,
  '30': 30%,
  '40': 40%,
  '50': 50%,
  '60': 60%,
  '70': 70%,
  '80': 80%,
  '90': 90%,
  //   '100': 100%
);

@function shade($color, $shade) {
  $shade-value: map-get($shades, $shade);

  @if $shade-value == null {
    @error "Shade `#{$shade}` does not exist.";
  } @else {
    $target: $color;
    // $target: color.scale($color, $saturation: 100%);
    @if $shade-value < 50% {
      @return color.mix(black, $target, 2 * (50% - $shade-value));
    } @else {
      @return color.mix(white, $target, 2 * ($shade-value - 50%));
    }
  }
}

$blue: #189ddb;
$indigo: #781de0;
$purple: #a454c4;
$pink: #d45896;
$red: #d32e3f;
$orange: #ee7c1f;
$yellow: #f7ca43;
$green: #19873e;
$teal: #41b995;
$cyan: #34d1d1;

$white: #ffffff;
// $gray-100: #e3e3e3;
// $gray-200: #c8c8c8;
// $gray-300: #a4a4a4;
// $gray-400: #757575;
// $gray-500: #606060;
// $gray-600: #484848;
// $gray-700: #383838;
// $gray-800: #282828;
// $gray-850: #252525;
// $gray-950: #181818;
// $gray-900: #222222;
$black: #000000;

$colors: (
  'blue': $blue,
  'indigo': $indigo,
  'purple': $purple,
  'pink': $pink,
  'red': $red,
  'orange': $orange,
  'yellow': $yellow,
  'green': $green,
  'teal': $teal,
  'cyan': $cyan,
  'black': $black,
  'white': $white,
  'gray': #888888,
  'gray-dark': shade($white, '80')
);

$primary: $purple;
$secondary: shade($white, '60');
$success: $green;
$info: $cyan;
$warning: $yellow;
$danger: $red;
$light: shade($white, '10');
$dark: shade($white, '90');

$theme-colors: (
  'primary': $primary,
  'secondary': $secondary,
  'success': $success,
  'info': $info,
  'warning': $warning,
  'danger': $danger,
  'light': $light,
  'dark': $dark
);

:root {
  @each $key, $value in $colors {
    --#{$key}: #{$value};

    @each $shade, $shade-value in $shades {
      --#{$key}-#{$shade}: #{shade($value, $shade)};
    }
  }

  @each $key, $value in $theme-colors {
    --#{$key}: #{$value};

    @each $shade, $shade-value in $shades {
      --#{$key}-#{$shade}: #{shade($value, $shade)};
    }
  }
}
